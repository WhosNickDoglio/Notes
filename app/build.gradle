apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'
apply plugin: 'io.fabric'
apply from: rootProject.file("quality.gradle")

//Need to make this work with Travis
//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

//CLEAN ALL THIS UP
android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildTools
    defaultConfig {
        applicationId "com.nicholasdoglio.notes"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
//        signingConfigs {
//            config {
//                storeFile file(keystoreProperties['storeFile'])
//                storePassword keystoreProperties['storePassword']
//                keyAlias keystoreProperties['keyAlias']
//                keyPassword keystoreProperties['keyPassword']
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
//            manifestPlaceholders = [FABRIC_KEY: keystoreProperties['fabricKey']]
        }
        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix ".debug"
            testCoverageEnabled true
//            manifestPlaceholders = [FABRIC_KEY: keystoreProperties['fabricKey']]
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    //Android
    implementation "com.android.support:appcompat-v7:$rootProject.support"
    implementation "com.android.support:recyclerview-v7:$rootProject.support"
    implementation "com.android.support:design:$rootProject.support"
    implementation "com.android.support:support-v4:$rootProject.support"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint"

    //Anko
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$rootProject.anko"

    //Android Architecture Components
    implementation "android.arch.lifecycle:common-java8:$rootProject.archComponents"
    implementation "android.arch.lifecycle:extensions:$rootProject.archComponents"
    implementation "android.arch.paging:runtime:$rootProject.paging"
    implementation "android.arch.persistence.room:runtime:$rootProject.room"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.room"
    kapt "android.arch.persistence.room:compiler:$rootProject.room"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rootProject.rxBinding"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rootProject.rxRelay"

    //AutoDispose
    implementation "com.uber.autodispose:autodispose-kotlin:$rootProject.dispose"
    implementation "com.uber.autodispose:autodispose-android-kotlin:$rootProject.dispose"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-kotlin:$rootProject.dispose"

    //Dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    //Debugging
    implementation "com.jakewharton.timber:timber:$rootProject.timber"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.canary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.canary"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.canary"
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    //Testing
    testImplementation "junit:junit:$rootProject.junit"
    testImplementation "android.arch.persistence.room:testing:$rootProject.room"
    testImplementation "android.arch.core:core-testing:$rootProject.archComponents"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.robolectric:robolectric:$rootProject.robo"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runner"
}
