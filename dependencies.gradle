/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
ext {
    app = [
            compileSdk : 29,
            targetSdk  : 29,
            minSdk     : 21,
            versionCode: 5,
            versionName: "1.1.1"
    ]
    versions = [
            agp           : '3.4.2',
            jacoco_android: '0.1.4',
            license       : '0.8.5',
            kotlin        : '1.3.41',
            activity      : '1.1.0-alpha01',
            appcompat     : '1.1.0-rc01',
            recyclerview  : '1.1.0-beta01',
            cardview      : '1.0.0',
            material      : '1.1.0-alpha08',
            constraint    : '2.0.0-beta2',
            lifecycle     : '2.2.0-alpha02',
            core_testing  : '2.1.0-rc01',
            room          : '2.2.0-alpha01',
            dagger        : '2.23.2',
            timber        : '4.7.1',
            canary        : '2.0-alpha-3',
            junit         : '4.12',
            test_junit    : '1.1.2-alpha02',
            test_core     : '1.2.1-alpha02',
            test_runner   : '1.3.0-alpha02',
            test_rules    : '1.3.0-alpha02',
            espresso      : '3.3.0-alpha02',
            navigation    : '2.1.0-alpha06',
            core_ktx      : "1.2.0-alpha02",
            fragment_ktx  : "1.2.0-alpha01",
            ktlint        : '0.34.0',
            coroutines    : '1.3.0-M2',
            truth         : '1.0',
            mockk         : '1.9.3',
            robo          : '4.3'
    ]
    libs = [
            ktlint              : "com.pinterest:ktlint:${versions.ktlint}",
            kotlin              : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
            coroutines_core     : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
            coroutines_android  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",
            coroutines_test     : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}",
            activity            : "androidx.activity:activity-ktx:${versions.activity}",
            appcompat           : "androidx.appcompat:appcompat:${versions.appcompat}",
            recyclerview        : "androidx.recyclerview:recyclerview:${versions.recyclerview}",
            cardview            : "androidx.cardview:cardview:${versions.cardview}",
            constraint          : "androidx.constraintlayout:constraintlayout:${versions.constraint}",
            navigation_fragment : "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
            navigation_ui       : "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
            core_ktx            : "androidx.core:core-ktx:${versions.core_ktx}",
            fragment_ktx        : "androidx.fragment:fragment-ktx:${versions.fragment_ktx}",
            lifecycle_viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}",
            lifecycle_runtime   : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}",
            lifecycle_livedata  : "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}",
            lifecycle_commons   : "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}",
            lifecycle_test      : "androidx.arch.core:core-testing:${versions.core_testing}",
            room_runtime        : "androidx.room:room-runtime:${versions.room}",
            room_compiler       : "androidx.room:room-compiler:${versions.room}",
            room_ktx            : "androidx.room:room-ktx:${versions.room}",
            room_testing        : "androidx.room:room-testing:${versions.room}",
            androidx_test_core  : "androidx.test:core:${versions.test_core}",
            androidx_test_junit : "androidx.test.ext:junit:${versions.test_junit}",
            androidx_test_runner: "androidx.test:runner:${versions.test_runner}",
            androidx_test_rules : "androidx.test:rules:${versions.test_rules}",
            espresso_core       : "androidx.test.espresso:espresso-core:${versions.espresso}",
            material            : "com.google.android.material:material:${versions.material}",
            dagger              : "com.google.dagger:dagger:${versions.dagger}",
            dagger_compiler     : "com.google.dagger:dagger-compiler:${versions.dagger}",
            timber              : "com.jakewharton.timber:timber:${versions.timber}",
            canary              : "com.squareup.leakcanary:leakcanary-android:${versions.canary}",
            junit               : "junit:junit:${versions.junit}",
            truth               : "com.google.truth:truth:${versions.truth}",
            mockk               : "io.mockk:mockk:${versions.mockk}",
            robolectric         : "org.robolectric:robolectric:${versions.robo}",
    ]
}
